import styles from './Cases.module.scss'
import CasesBlock from './CasesBlock'
import Button from '../../Button/Button'
import CasesPopup from './CasesPopap'
import { useState } from 'react'

const casesData = [
  {
    imgSrc: 'src/assets/images/cases1.png',
    text: 'Запустить клуб по подписке. Клуб базируется в Геткурс (уроки с записями) и в телеграм группе.',
    list: [
      'созданы продукт и предложения для покупки клуба',
      'сделан небольшой ленд на Геткурс',
      'сделаны страницы с офертой и согласием на обработку перс.данных',
      'настроен прием платежей',
      'создан и подключен телеграм-бот',
      'создан и подключен телеграм-контролер (для группы в телеграм)',
      'подготовлен тренинг, уроки, доступы к ним',
      'созданы письма для рассылок и уведомлений (почта и бот)',
      'сделаны процесс по автопродлению подписки (на фото)',
      'настроены доп.поля у пользователей',
    ],
    deadline: 'Срок выполнения 2 дня',
  },
  {
    imgSrc: 'src/assets/images/cases2.png',
    text: 'Собрать стандартную вебинарную воронку. Вебинар проходит 2 раза в день. Тех, кто не пришел на веб, повторно зовем на эфир через несколько дней. Кто на эфире был - дарим подарок.',
    list: [
      'сверстаны письма',
      'подготовлена смс (интеграция была настроена ранее)',
      'подготовлен автозвонок (интеграция была настроена ранее)',
      'настроен подарок',
      'собран процесс (на фото)',
    ],
    deadline: 'Срок выполнения 3 дня',
  },
  {
    imgSrc: 'src/assets/images/cases3.png',
    text: 'Настроить подарочные сертификаты с фиксированной суммой скидки. Скидка приходит в виде подарочного сертификата, на котором расположен промокод индивидуальный. Сертификат можно оставить себе или подарить подруге. Распространяется сертификат на все курсы школы.',
    list: [
      'сделаны продукты и предложения (на фото)',
      'подготовлен сайт на Тильда',
      'создан виджет и интегрирован с сайтом',
      'собраны и настроены промоакции',
      'настроены рассылки с индивидуальными кодами',
    ],
    deadline: 'Срок выполнения день',
  },
  {
    imgSrc: 'src/assets/images/cases4.png',
    text: 'Провести живой эфир в связке Бизон 365+ОБС+Ютуб.',
    list: [
      'настроена вебинарная комната (заставка, время, условия входа)',
      'настроены кнопки и баннеры',
      'настроена ОБС',
      'настроена трансляция в Ютуб',
      'настроены подарки, тем кто был до конца',
      'создана интеграция Бизон 365 и Геткурс, для передачи информации с вебинара',
      'отправка догревающих писем в моменте',
      'модерация вебинара (на фото)',
    ],
    deadline: 'Срок выполнения день',
  },
  {
    imgSrc: 'src/assets/images/cases5.png',
    text: 'Подготовить 4х дневный марафон, который будет проходит онлайн каждый день. После эфира пользователю открывается доступ к записи на неделю. После прохождения марафона пользователь получает диплом.',
    list: [
      'созданы продукт и предложения для регистрации в воронку',
      'собрана страница для регистрации на Тильда',
      'настроен и подключен виджет к странице',
      'созданы письма для рассылок (почта и бот)',
      'сделаны процесс по рассылке сообщений',
      'настроена вебинарные комнаты, проведены эфиры, которые в последствие были переоформлены в автовебинары',
      'подготовлен тренинг, уроки, принятие д/з',
      'настроен процесс по открытию доступов к урокам с записями (на фото)',
      'настроена выдача дипломов, кто сдал все д/з в определенный период',
      'реализовано начисление бонусных монет, которые можно потратить на определенные продукты',
    ],
    deadline: 'Срок выполнения 10 дней',
  },
]

const Cases = () => {
  const [popupData, setPopupData] = useState(null)

  const openPopup = caseIndex => {
    setPopupData(casesData[caseIndex])
  }

  const closePopup = () => {
    setPopupData(null)
  }
  return (
    <div
      className={styles.cases}
      id='cases'>
      <h2>Кейсы</h2>
      {casesData.map((caseItem, index) => (
        <CasesBlock
          key={index}
          imgSrc={caseItem.imgSrc}
          text={caseItem.text}
          deadline={caseItem.deadline}
          onButtonClick={() => openPopup(index)}
        />
      ))}
      {popupData && (
        <CasesPopup
          data={popupData}
          handleClose={closePopup}
        />
      )}
      <p className={styles.more}>
        Посмотреть еще больше кейсов, которые были выполнены мной, Вы можете,
        нажав на кнопку ниже.
      </p>
      <Button
        onClick={() =>
          window.open('https://t.me/missKovaleva_GetCourse', '_blank')
        }>
        Посмотреть кейсы
      </Button>
      
    </div>
  )
}

export default Cases
